@require(table_obj, prefix)
local @`prefix`@`table_obj.table_name` = {}

@`prefix`@`table_obj.table_name`.table_name = "@`table_obj.table_name`"

@`prefix`@`table_obj.table_name`.field_list = {
@for index, (field_name, desc) in enumerate(zip(table_obj.field_names,table_obj.descriptions),start=1):
@`'{:<80}{}'.format(f'    {field_name} = {index},', '-- ' + desc if desc else '')`
@end
}

@`prefix`@`table_obj.table_name`.data_list = {
@for index, (value, export) in enumerate(table_obj.data_iter_by_field_names('value', 'export'), start=1):
    @if export is None or export == 1:
    [@index!s] = @format_value(value)
    @end
@end
}

@for macro_name, macro_value, macro_desc in table_obj.macro_data_iter:
@if macro_name is not None and macro_value is not None:
@`'{:<80}{}'.format(f'{prefix}{table_obj.table_name}.{macro_name.upper()} = {format_value(macro_value)}', '-- ' + macro_desc if macro_desc else '')`
@end
@end

return @`prefix`@`table_obj.table_name`
